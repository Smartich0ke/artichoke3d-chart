# Default values for artichoke3d.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# I came here searching for something
# But I don't remember what that thing is anymore
# Did I dream you? Or are you dreaming me now?
# As your waking thoughts gradually take over
# As all dreams are ultimately forgotten
# And lost...
#
# - Steve Wilson, "The Harmony Codex"

replicaCount: 1

image:
  repository: harbor.artichokenetwork.com/artichoke3d/artichoke3d-web
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.1.1"

# The name of the app to be shown on web pages
appName: "artichoke3d"

# The production environment (should always be production)
appEnv: "production"

# Weather or not the app show detailed error messages
appDebug: "false"

# The URL where the app can be reached
appUrl: "http://localhost"

taskScheduler:
  enabled: true

# The app key used for encryption. This cannot be left blank. Generate a new one with "php artisan key:generate".
appKey:
  key: "null"

  # Optionally, you can use an existing secret to store the app key. If you do, the key above will be ignored. Use the key "key" in the secret.  
  useExistingSecret: false
  existingSecretName: ""

# Whether or not to create an initial admin user. If using external secret, keys bust be "email", "name", and "password".
initialAdminUser:
  useExistingSecret: false
  existingSecretName: ""
  name: "admin"
  email: "admin@example.com"
  password: "ChangeMeNow!"

# Log settings
logChannel: "stack"
logLevel: "warning"

# The database connection settings
# Database configuration
database:
  externalDatabase: false
  auth:
    driver: "pgsql"
    host: "ferrite-postgres"
    port: "5432"
    database: "ferrite"
    username: "ferrite-user"
    password: "ReallyStrongPassword"
    useExistingSecret: false
    existingSecretName: ""

# PostgreSQL chart configuration
postgresql:
  enabled: true
  auth:
    username: artichoke3d
    password: PleaseChangeMe!
    database: artichoke3d
  service:
    ports:
      postgres: 5432
  # Other PostgreSQL configurations...

# The cache, session and queue drivers
cache:
  driver: "redis"
session:
  driver: "redis"
queue:
  connection: "redis"

# The redis connection settings
redis:
  externalRedis: false
  driver: "predis"
  auth:
    host: "ferrite-redis"
    password: ""
    port: "6379"
    useExistingSecret: false
    existingSecretName: ""

redischart:
  enabled: true
  auth:
    password: "ReallyStrongPassword"
  service:
    ports:
      redis: 6379
  

mail:
  driver: "smtp"
  host: "smtp.example.com"
  port: "587"
  username: "null"
  password: "null"
  encryption: "null"
  useExistingSecret: false
  existingSecretName: ""
  from: 
    address: "null"
    name: "null"

oauth:
  google:
    clientId: "null"
    clientSecret: "null"
    useExistingSecret: false
    existingSecretName: ""
  github:
    clientId: "null"
    clientSecret: "null"
    useExistingSecret: false
    existingSecretName: ""
  facebook:
    clientId: "null"
    clientSecret: "null"
    useExistingSecret: false
    existingSecretName: ""

cashier:
  currency: "AUD"
  locale: "en_AU"
  stripe:
    key: "null"
    secretKey: "null"
    webhookSecret: "null"
    useExistingSecret: false
    existingSecretName: ""

cdnUrl: "null"

analytics:
  google:
    analyticsId: "null"

# Persistent volume settings
persistence:
  enabled: true
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 1Gi

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: atichoke3d.test
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
